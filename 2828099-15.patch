diff --git a/core/lib/Drupal/Core/DependencyInjection/YamlFileLoader.php b/core/lib/Drupal/Core/DependencyInjection/YamlFileLoader.php
index 542c2848f7..8fa002c6e3 100644
--- a/core/lib/Drupal/Core/DependencyInjection/YamlFileLoader.php
+++ b/core/lib/Drupal/Core/DependencyInjection/YamlFileLoader.php
@@ -120,7 +120,9 @@ private function parseDefinitions($content, $file)
             list($provider, ) = explode('.', $basename, 2);
         }
         foreach ($content['services'] as $id => $service) {
-            $service['tags'][] = ['name' => '_provider', 'provider' => $provider];
+            if (is_array($service)) {
+              $service['tags'][] = ['name' => '_provider', 'provider' => $provider];
+            }
             $this->parseDefinition($id, $service, $file);
         }
     }
diff --git a/core/tests/Drupal/Tests/Core/DependencyInjection/YamlFileLoaderTest.php b/core/tests/Drupal/Tests/Core/DependencyInjection/YamlFileLoaderTest.php
index cdc1f18b1a..011db5f393 100644
--- a/core/tests/Drupal/Tests/Core/DependencyInjection/YamlFileLoaderTest.php
+++ b/core/tests/Drupal/Tests/Core/DependencyInjection/YamlFileLoaderTest.php
@@ -26,8 +26,9 @@ protected function setUp(): void {
   public function testParseDefinitionsWithProvider() {
     $yml = <<<YAML
 services:
-  example_service:
+  example_service_1:
     class: \Drupal\Core\ExampleClass
+  example_service_2: '@example_service_1'
   example_private_service:
     class: \Drupal\Core\ExampleClass
     public: false
@@ -45,11 +46,12 @@ class: \Drupal\Core\ExampleClass
     $yaml_file_loader = new YamlFileLoader($builder);
     $yaml_file_loader->load('vfs://drupal/modules/example/example.yml');
 
-    $this->assertEquals(['_provider' => [['provider' => 'example']]], $builder->getDefinition('example_service')->getTags());
-    $this->assertTrue($builder->getDefinition('example_service')->isPublic());
+    $this->assertEquals(['_provider' => [['provider' => 'example']]], $builder->getDefinition('example_service_1')->getTags());
+    $this->assertEquals('example_service_1', $builder->getAlias('example_service_2')->__toString());
+    $this->assertTrue($builder->getDefinition('example_service_1')->isPublic());
     $this->assertFalse($builder->getDefinition('example_private_service')->isPublic());
     $builder->compile();
-    $this->assertTrue($builder->has('example_service'));
+    $this->assertTrue($builder->has('example_service_1'));
     $this->assertFalse($builder->has('example_private_service'));
   }
 
